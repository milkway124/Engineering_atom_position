#!/bin/sh

#only change 'nat', 'ntyp', 'CELL_PARAMETERS', 'ATOMIC_POSITIONS'

#example of code
#
# InsertPOSCAR2SCF  {POSCARfile}  {SCFfile}
#

#check input parameter
if [ $# -ne 2 ]; then
    echo -e "Now # of parameter is $#\n"
    echo "Need 2 parameter"
    echo "First : 'POSCARFile' & Second : 'ScfFile'" 
    exit 1
else
    POSCARFile=${1}
    ScfFile=${2}
    echo "Start convert POSCARFile to ScfFile!"
    echo "POSCARFile : $POSCARFile"
    echo "ScfFile    : $ScfFile"
fi

#check the file exit
if [ ! -f $POSCARFile ]; then
    echo "POSCARFile Not Exit!!"
    exit 1
fi

if [ ! -f $ScfFile ]; then
    echo "ScfFile Not Exit!!"
    exit 1
fi

#get file row using parameter
function GETRow {
    #$1 : parameter, $2 : file
    grep -n ${1} ${2} | cut -d: -f1 | head -1
}

function InsertTXT {
    FILE=${1}
    LINE=${2}
    STRING=${3}
    sed -i'' -e "${LINE}i ${STRING}" ${FILE}
}

function SwitchTXT {
    FILE=${1}
    LINE=${2}
    STRING=${3}
    sed -i "${LINE}s/.*/${STRING}/g" ${FILE}
}


#psedo_dir 
LINEpsedo=`GETRow pseudo_dir $ScfFile`

#remove newline parameter (^M)
sed -i 's///g' $POSCARFile

#replace the atom data in &SYSTEM (nat, ntyp)
NEWntypDATA=`sed -n '6p' $POSCARFile`
NEWnatDATA=`sed -n '7p' $POSCARFile`

NEWntype=$(echo $NEWnatDATA | wc -w)

NEWnat=0
ListNtyp=()
ListNat=()
for i in `seq 1 $NEWntype`
do
    atomNAME=$(echo $NEWntypDATA | cut -f $i -d ' ')
    atomNUM=$(echo $NEWnatDATA | cut -f $i -d ' ')

    ListNtyp+=($atomNAME)
    ListNat+=($atomNUM)
    
    NEWnat=$((NEWnat+atomNUM))
done


NUMnat=`GETRow nat  $ScfFile`
NUMntyp=`GETRow ntyp  $ScfFile`
SwitchTXT $ScfFile ${NUMnat} "nat = ${NEWnat}"
SwitchTXT $ScfFile ${NUMntyp} "ntyp = ${NEWntype}"

#replace the CELL_PARAMETERS
NUMCELL=`GETRow CELL_PARAMETERS $ScfFile`
BLINKCELL=`sed -n $((NUMCELL+1))p < $ScfFile | awk '{print NF}'`

count=0
while read LINE; do
    count=$((count+1))
    if (( $count == 2 )); then
        LatticeMulti=$LINE
    elif (( $count >= 3  )) && (( $count <= 5 )); then
        NUMLINE=$((NUMCELL+count-2))
        LINE1=$(echo $LINE | cut -f 1 -d ' ')
        LINE2=$(echo $LINE | cut -f 2 -d ' ')
        LINE3=$(echo $LINE | cut -f 3 -d ' ')
        PARA1=$(echo $LINE1 $LatticeMulti |awk '{printf "%.10f",$1*$2}')
        PARA2=$(echo $LINE2 $LatticeMulti |awk '{printf "%.10f",$1*$2}')
        PARA3=$(echo $LINE3 $LatticeMulti |awk '{printf "%.10f",$1*$2}')

        if (( $BLINKCELL == 3  ));then
            SwitchTXT $ScfFile ${NUMLINE} "${PARA1}    ${PARA2}    ${PARA3}"
        else
            InsertTXT $ScfFile ${NUMLINE} "${PARA1}    ${PARA2}    ${PARA3}"
        fi

        
    elif (( $count > 5 )); then 
        break
    fi
done < $POSCARFile


#repalce the ATOMIC_POSITIONS
count=0
NEWATOMPOSI=`GETRow ATOMIC_POSITIONS $ScfFile`

init=$((NEWATOMPOSI+1))
last=`wc -l $ScfFile | cut -f 1 -d " "`
sed -i "${init},${last}d" $ScfFile

list=0
AtomNum=$((-ListNat[$list]))
while read LINE;do
    count=$((count+1))
    if (( $count >= 9 )); then
        AtomNum=$((AtomNum+1))
        if (( $AtomNum > 0 )); then
            list=$((list+1))
            AtomNum=$((AtomNum-ListNat[$list]))
            NEWnat=$((NEWnat+atomNUM))
            #listNum=${ListNat[$list]}
            #AtomNum=$(echo "AtomNum $listNum" | awk '{print $1 + $2}' )
            #NEWnat=$(echo "$NEWnat $atomNUM" | awk '{print $1 + $2}' )
        fi
        Atom=${ListNtyp[$list]}
        echo -e "${Atom}        ${LINE}" >> $ScfFile
    fi
done < $POSCARFile

#remove newline text
sed -i 's///g' $ScfFile

sed -i 's/\t/    /g' $ScfFile


echo "FIN!"
